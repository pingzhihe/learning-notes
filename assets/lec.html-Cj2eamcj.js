import{_ as l,c as r,a as n,o as s}from"./app-DsOgR8nk.js";const i={};function t(o,e){return s(),r("div",null,e[0]||(e[0]=[n('<h2 id="week-9-agile-sdlc-frameworks" tabindex="-1"><a class="header-anchor" href="#week-9-agile-sdlc-frameworks"><span>Week 9 Agile SDLC Frameworks</span></a></h2><h3 id="key-agile-sdlc-frameworks-covered" tabindex="-1"><a class="header-anchor" href="#key-agile-sdlc-frameworks-covered"><span>Key Agile SDLC Frameworks Covered:</span></a></h3><ul><li><strong>SAFe Agile</strong> (Scaled Agile Framework)</li><li><strong>LeSS</strong> (Large Scale Scrum)</li><li><strong>Scrum@Scale</strong></li><li><strong>DevOps</strong></li><li><strong>Lean Software Development</strong></li></ul><h3 id="safe-scaled-agile-framework" tabindex="-1"><a class="header-anchor" href="#safe-scaled-agile-framework"><span>SAFe (Scaled Agile Framework):</span></a></h3><ul><li><strong>Definition</strong>: A framework for scaling Agile across large organizations.</li><li><strong>Levels</strong>: <ul><li><strong>Essential SAFe</strong>: Core principles for Agile development.</li><li><strong>Large Solution SAFe</strong>: Scaling across multiple teams/solutions.</li><li><strong>Portfolio SAFe</strong>: Scaling across portfolios.</li><li><strong>Full SAFe</strong>: Comprehensive, organization-wide Agile scaling.</li></ul></li><li><strong>Benefits</strong>: <ul><li>Empowers teams, promotes continuous delivery, scalable structure for large enterprises.</li></ul></li></ul><h3 id="less-large-scale-scrum" tabindex="-1"><a class="header-anchor" href="#less-large-scale-scrum"><span>LeSS (Large Scale Scrum):</span></a></h3><ul><li><strong>Definition</strong>: A framework for scaling Scrum, simplifying traditional Scrum ceremonies for large teams.</li><li><strong>Key Features</strong>: <ul><li>Single <strong>Product Backlog</strong>.</li><li>One <strong>Product Owner</strong> and one <strong>Shippable Product Increment</strong> after each sprint.</li><li><strong>Multi-team Sprint Planning</strong> and <strong>Overall Retrospective</strong> for multiple teams.</li></ul></li><li><strong>Benefits</strong>: <ul><li>Streamlined, system-wide thinking, single backlog, and lower complexity.</li></ul></li></ul><h3 id="scrum-scale" tabindex="-1"><a class="header-anchor" href="#scrum-scale"><span>Scrum@Scale:</span></a></h3><ul><li><strong>Definition</strong>: A framework to manage multiple Scrum teams working on prioritized goals.</li><li><strong>Key Features</strong>: <ul><li><strong>Scrum Master Cycle</strong>: Focuses on how things get done.</li><li><strong>Product Owner Cycle</strong>: Focuses on what needs to be done.</li><li><strong>Scrum of Scrums (SoS)</strong>: Larger Scrum team managing multiple teams, with scaled Daily Scrums and Sprint Retrospectives.</li><li><strong>Executive Action Team (EAT)</strong>: Oversees Scrum implementation across the organization.</li></ul></li></ul><h3 id="devops" tabindex="-1"><a class="header-anchor" href="#devops"><span>DevOps:</span></a></h3><ul><li><strong>Definition</strong>: Combines development and operations to improve the integration and delivery of software.</li><li><strong>Key Points</strong>: <ul><li>Focus on collaboration between development and operations teams.</li><li><strong>DevOps Lifecycle</strong>: Includes stages like Discover, Plan, Build, Test, Deploy, Operate, and Continuous Feedback.</li><li>Works with Agile for continuous delivery and adaptation to change.</li></ul></li></ul><h3 id="lean-software-development" tabindex="-1"><a class="header-anchor" href="#lean-software-development"><span>Lean Software Development:</span></a></h3><ul><li><strong>Definition</strong>: Applies Lean manufacturing principles to software development.</li><li><strong>7 Principles</strong>: <ol><li><strong>Eliminate waste</strong>.</li><li><strong>Build in quality</strong> (e.g., test-driven development).</li><li><strong>Amplify learning</strong>.</li><li><strong>Delay commitment</strong>.</li><li><strong>Deliver fast</strong>.</li><li><strong>Respect people</strong>.</li><li><strong>Optimize the whole</strong>.</li></ol></li><li><strong>Key Practices</strong>: <ul><li>Remove unnecessary code, maximize customer value, enhance efficiency, and focus on continuous improvement.</li></ul></li></ul><h3 id="主要涵盖的敏捷sdlc框架" tabindex="-1"><a class="header-anchor" href="#主要涵盖的敏捷sdlc框架"><span>主要涵盖的敏捷SDLC框架：</span></a></h3><ul><li><strong>SAFe 敏捷</strong>（Scaled Agile Framework）</li><li><strong>LeSS</strong>（大规模Scrum）</li><li><strong>Scrum@Scale</strong></li><li><strong>DevOps</strong></li><li><strong>精益软件开发</strong></li></ul><h3 id="safe-scaled-agile-framework-规模化敏捷框架" tabindex="-1"><a class="header-anchor" href="#safe-scaled-agile-framework-规模化敏捷框架"><span>SAFe（Scaled Agile Framework，规模化敏捷框架）：</span></a></h3><ul><li><strong>定义</strong>：一个用于在大型组织中扩展敏捷开发的框架。</li><li><strong>层级</strong>： <ul><li><strong>Essential SAFe</strong>（基础SAFe）：敏捷开发的核心原则。</li><li><strong>Large Solution SAFe</strong>（大解决方案SAFe）：跨多个团队或解决方案扩展敏捷。</li><li><strong>Portfolio SAFe</strong>（投资组合SAFe）：跨投资组合扩展敏捷。</li><li><strong>Full SAFe</strong>（完整SAFe）：最全面的敏捷扩展，适用于整个组织。</li></ul></li><li><strong>优势</strong>： <ul><li>授权团队，促进持续交付，为大型企业提供可扩展结构。</li></ul></li></ul><h3 id="less-大规模scrum" tabindex="-1"><a class="header-anchor" href="#less-大规模scrum"><span>LeSS（大规模Scrum）：</span></a></h3><ul><li><strong>定义</strong>：一种扩展Scrum的框架，简化了传统Scrum的复杂性，适用于大型团队。</li><li><strong>关键特点</strong>： <ul><li>单一 <strong>产品待办列表</strong>（Product Backlog）。</li><li>一个 <strong>产品负责人</strong> 和每次冲刺后一个 <strong>可交付产品增量</strong>。</li><li><strong>多团队冲刺规划</strong> 和 <strong>整体回顾</strong> 涉及多个团队。</li></ul></li><li><strong>优势</strong>： <ul><li>精简，系统性思考，单一待办列表，降低复杂性。</li></ul></li></ul><h3 id="scrum-scale-1" tabindex="-1"><a class="header-anchor" href="#scrum-scale-1"><span>Scrum@Scale：</span></a></h3><ul><li><strong>定义</strong>：一个用于管理多个Scrum团队以实现优先目标的框架。</li><li><strong>关键特点</strong>： <ul><li><strong>Scrum Master循环</strong>：关注“如何”完成工作。</li><li><strong>产品负责人循环</strong>：关注“需要做什么”。</li><li><strong>Scrum of Scrums (SoS)</strong>：管理多个团队的更大Scrum团队，具有扩展的每日Scrum和冲刺回顾。</li><li><strong>执行行动团队 (EAT)</strong>：监督Scrum在整个组织中的实施。</li></ul></li></ul><h3 id="devops-1" tabindex="-1"><a class="header-anchor" href="#devops-1"><span>DevOps：</span></a></h3><ul><li><strong>定义</strong>：将开发和运维相结合，以提高软件集成和交付的效率。</li><li><strong>关键点</strong>： <ul><li>强调开发和运维团队之间的协作。</li><li><strong>DevOps生命周期</strong>：包括发现、规划、构建、测试、部署、操作和持续反馈等阶段。</li><li>与敏捷结合，实现持续交付和快速适应变化。</li></ul></li></ul><h3 id="精益软件开发-lean-software-development" tabindex="-1"><a class="header-anchor" href="#精益软件开发-lean-software-development"><span>精益软件开发（Lean Software Development）：</span></a></h3><ul><li><strong>定义</strong>：将精益制造原则应用于软件开发。</li><li><strong>7个原则</strong>： <ol><li><strong>消除浪费</strong>。</li><li><strong>内建质量</strong>（如测试驱动开发）。</li><li><strong>放大学习</strong>。</li><li><strong>延迟承诺</strong>。</li><li><strong>快速交付</strong>。</li><li><strong>尊重个人</strong>。</li><li><strong>优化整体</strong>。</li></ol></li><li><strong>关键实践</strong>： <ul><li>删除不必要的代码，最大化客户价值，提高效率，专注于持续改进。</li></ul></li></ul><h2 id="week-10-contracts-outsourcing-and-procurement" tabindex="-1"><a class="header-anchor" href="#week-10-contracts-outsourcing-and-procurement"><span>Week 10 Contracts, Outsourcing, and Procurement</span></a></h2><h3 id="outsourcing" tabindex="-1"><a class="header-anchor" href="#outsourcing"><span>Outsourcing:</span></a></h3><ul><li><strong>Definition</strong>: Engaging external parties to perform tasks or produce goods typically handled in-house.</li><li><strong>Types</strong>: <ul><li><strong>Onshoring</strong>: Within national borders.</li><li><strong>Nearshoring</strong>: To nearby countries (e.g., New Zealand, Indonesia).</li><li><strong>Offshoring</strong>: Anywhere globally, regardless of time zones.</li></ul></li><li><strong>Pros</strong>: <ul><li>Access to specialized skills, 24/7 operations, cost-saving potential, better technology, flexibility, risk mitigation.</li></ul></li><li><strong>Cons</strong>: <ul><li>Loss of control, security risks, cultural/language challenges, potential ethical issues (e.g., labor practices).</li></ul></li></ul><h3 id="procurement" tabindex="-1"><a class="header-anchor" href="#procurement"><span>Procurement:</span></a></h3><ul><li><strong>Definition</strong>: External sourcing of products or services for a project.</li><li><strong>Stages</strong>: <ol><li><strong>Plan</strong>: Stakeholder consultation, supply market analysis, risk assessment.</li><li><strong>Source</strong>: Engaging suppliers for value-driven outcomes.</li><li><strong>Manage</strong>: Ongoing supplier relationship management to ensure contract fulfillment.</li></ol></li><li><strong>Sourcing</strong>: <ul><li>RFx process (Request for Bid/Proposal/Tender/Quote).</li><li>Key in creating a detailed <em>Statement of Work</em> (SOW).</li></ul></li><li><strong>Evaluation</strong>: <ul><li>Teams review bids based on criteria (technical, management, price, past performance).</li><li>Finalize with Best and Final Offer (BAFO) and negotiate.</li></ul></li></ul><h3 id="contracts" tabindex="-1"><a class="header-anchor" href="#contracts"><span>Contracts:</span></a></h3><ul><li><strong>Definition</strong>: A binding agreement between buyer and seller, outlining obligations and deliverables.</li><li><strong>Types</strong>: <ul><li><strong>Fixed Price</strong>: Set total price for a well-defined product/service.</li><li><strong>Time and Materials</strong>: Payment based on time and resources used.</li></ul></li><li><strong>Key Clauses</strong>: <ul><li>Intellectual property, milestones, quality criteria, change management, penalties, and warranties.</li></ul></li></ul><p>This should help you with quick revision on key topics!</p><h3 id="外包-outsourcing" tabindex="-1"><a class="header-anchor" href="#外包-outsourcing"><span>外包 (Outsourcing):</span></a></h3><ul><li><strong>定义</strong>：通过合同形式，外包给外部机构执行任务或生产产品，这些任务通常由公司内部员工完成。</li><li><strong>外包类型</strong>： <ul><li><strong>国内外包 (Onshoring)</strong>：在国家边界内重新分配活动。</li><li><strong>邻近外包 (Nearshoring)</strong>：将活动分配到邻近国家（如新西兰、印尼）。</li><li><strong>离岸外包 (Offshoring)</strong>：无论地理位置或时区，将活动分配到其他国家。</li></ul></li><li><strong>优点</strong>： <ul><li>获取稀缺技能，24/7运行，降低成本，访问更好的技术，灵活性，降低风险（如敏捷项目管理）。</li></ul></li><li><strong>缺点</strong>： <ul><li>失去控制，供应链分散，安全问题，员工危机感，文化和语言障碍，可能的伦理问题（如劳动条件）。</li></ul></li></ul><h3 id="采购-procurement" tabindex="-1"><a class="header-anchor" href="#采购-procurement"><span>采购 (Procurement):</span></a></h3><ul><li><strong>定义</strong>：从外部采购项目所需的产品或服务。</li><li><strong>采购管理过程</strong>： <ol><li><strong>计划</strong>：与利益相关方沟通，分析市场，评估风险。</li><li><strong>采购</strong>：选择供应商，确保物有所值，避免不正当竞争。</li><li><strong>管理</strong>：持续管理供应商，确保合同执行。</li></ol></li><li><strong>采购方式</strong>： <ul><li>RFx流程（询价、招标、提案等）。</li><li>关键在于制定详细的<strong>工作说明书 (Statement of Work, SOW)</strong>。</li></ul></li><li><strong>评估</strong>： <ul><li>根据技术、管理、价格、过去表现等标准进行评估，最后选择最优供应商并进行谈判。</li></ul></li></ul><h3 id="合同-contracts" tabindex="-1"><a class="header-anchor" href="#合同-contracts"><span>合同 (Contracts):</span></a></h3><ul><li><strong>定义</strong>：买卖双方之间具有约束力的协议，明确责任和交付成果。</li><li><strong>合同类型</strong>： <ul><li><strong>固定价格合同</strong>：为明确的产品或服务设定固定价格。</li><li><strong>时间和材料合同</strong>：根据工作时间和使用的资源支付。</li></ul></li><li><strong>关键条款</strong>： <ul><li>知识产权、里程碑、质量标准、变更管理、违约罚款及担保条款。</li></ul></li></ul>',39)]))}const g=l(i,[["render",t],["__file","lec.html.vue"]]),c=JSON.parse('{"path":"/SPM/lec.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Week 9 Agile SDLC Frameworks","slug":"week-9-agile-sdlc-frameworks","link":"#week-9-agile-sdlc-frameworks","children":[{"level":3,"title":"Key Agile SDLC Frameworks Covered:","slug":"key-agile-sdlc-frameworks-covered","link":"#key-agile-sdlc-frameworks-covered","children":[]},{"level":3,"title":"SAFe (Scaled Agile Framework):","slug":"safe-scaled-agile-framework","link":"#safe-scaled-agile-framework","children":[]},{"level":3,"title":"LeSS (Large Scale Scrum):","slug":"less-large-scale-scrum","link":"#less-large-scale-scrum","children":[]},{"level":3,"title":"Scrum@Scale:","slug":"scrum-scale","link":"#scrum-scale","children":[]},{"level":3,"title":"DevOps:","slug":"devops","link":"#devops","children":[]},{"level":3,"title":"Lean Software Development:","slug":"lean-software-development","link":"#lean-software-development","children":[]},{"level":3,"title":"主要涵盖的敏捷SDLC框架：","slug":"主要涵盖的敏捷sdlc框架","link":"#主要涵盖的敏捷sdlc框架","children":[]},{"level":3,"title":"SAFe（Scaled Agile Framework，规模化敏捷框架）：","slug":"safe-scaled-agile-framework-规模化敏捷框架","link":"#safe-scaled-agile-framework-规模化敏捷框架","children":[]},{"level":3,"title":"LeSS（大规模Scrum）：","slug":"less-大规模scrum","link":"#less-大规模scrum","children":[]},{"level":3,"title":"Scrum@Scale：","slug":"scrum-scale-1","link":"#scrum-scale-1","children":[]},{"level":3,"title":"DevOps：","slug":"devops-1","link":"#devops-1","children":[]},{"level":3,"title":"精益软件开发（Lean Software Development）：","slug":"精益软件开发-lean-software-development","link":"#精益软件开发-lean-software-development","children":[]}]},{"level":2,"title":"Week 10 Contracts, Outsourcing, and Procurement","slug":"week-10-contracts-outsourcing-and-procurement","link":"#week-10-contracts-outsourcing-and-procurement","children":[{"level":3,"title":"Outsourcing:","slug":"outsourcing","link":"#outsourcing","children":[]},{"level":3,"title":"Procurement:","slug":"procurement","link":"#procurement","children":[]},{"level":3,"title":"Contracts:","slug":"contracts","link":"#contracts","children":[]},{"level":3,"title":"外包 (Outsourcing):","slug":"外包-outsourcing","link":"#外包-outsourcing","children":[]},{"level":3,"title":"采购 (Procurement):","slug":"采购-procurement","link":"#采购-procurement","children":[]},{"level":3,"title":"合同 (Contracts):","slug":"合同-contracts","link":"#合同-contracts","children":[]}]}],"git":{"updatedTime":1729062403000,"contributors":[{"name":"pingzhihe","email":"pzh1760473545@gmail.com","commits":1,"url":"https://github.com/pingzhihe"}]},"filePathRelative":"SPM/lec.md"}');export{g as comp,c as data};
