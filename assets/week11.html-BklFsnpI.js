import{_ as a,c as n,a as t,o as e}from"./app-DsOgR8nk.js";const l={};function m(i,s){return e(),n("div",null,s[0]||(s[0]=[t('<h1 id="quantum-algorithms" tabindex="-1"><a class="header-anchor" href="#quantum-algorithms"><span>Quantum Algorithms</span></a></h1><h2 id="_1-deutsch-s-algorithm" tabindex="-1"><a class="header-anchor" href="#_1-deutsch-s-algorithm"><span>1.Deutsch&#39;s Algorithm</span></a></h2><h3 id="problem-statemet" tabindex="-1"><a class="header-anchor" href="#problem-statemet"><span>problem statemet</span></a></h3><ul><li>Given a function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">f: \\{0,1\\} \\to \\{0,1\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> as a black box</li><li>Determinine if the function is balanced or constant</li><li>Balanced: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><mi>f</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(0) \\neq f(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>Constant: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(0) = f(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li></ul><h3 id="classial-solution" tabindex="-1"><a class="header-anchor" href="#classial-solution"><span>Classial Solution</span></a></h3><ul><li>Requires evaluating f with both inputs 0 and 1</li><li>Worst-case complexity: 2 function evaluations</li></ul><h3 id="quantum-solution" tabindex="-1"><a class="header-anchor" href="#quantum-solution"><span>Quantum Solution</span></a></h3><ul><li>Uses quantum superposition to evaluate both inputs simultaneously</li><li>Achieves result in one function evaluation</li></ul><h3 id="key-concepts" tabindex="-1"><a class="header-anchor" href="#key-concepts"><span>Key concepts</span></a></h3><ul><li>Quantum parallelism</li><li>Hadmard gate for creating superposition</li><li>Reversible quantum gates</li></ul><h3 id="algorithm-steps" tabindex="-1"><a class="header-anchor" href="#algorithm-steps"><span>Algorithm Steps</span></a></h3><ol><li>Prepare initial state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mn>01</mn><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{01}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">01</span></span><span class="mclose">⟩</span></span></span></span></span></li><li>Apply Hadamard gates to both qubits</li><li>Apply the quantum oracle <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">U_{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li><li>Apply Hadamrd gate to the first qubit</li><li>Measure the first qubit</li></ol><h3 id="outcome" tabindex="-1"><a class="header-anchor" href="#outcome"><span>Outcome</span></a></h3><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">0</span></span><span class="mclose">⟩</span></span></span></span></span>: Functon is constant</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">1</span></span><span class="mclose">⟩</span></span></span></span></span>: Function is balanced</li></ul><h2 id="_2-deutsch-jozsa-algorithm" tabindex="-1"><a class="header-anchor" href="#_2-deutsch-jozsa-algorithm"><span>2.Deutsch-Jozsa Algorithm</span></a></h2><h3 id="problem-statement" tabindex="-1"><a class="header-anchor" href="#problem-statement"><span>Problem Statement</span></a></h3><ul><li>Generalization of Deutsch&#39;s algorithm</li><li>Functon f: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\\{0,1\\}^n \\to \\{0,1\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></li><li>Determine if f is constant or balanced(half 0s, half 1s)</li></ul><h3 id="classical-solution" tabindex="-1"><a class="header-anchor" href="#classical-solution"><span>Classical Solution</span></a></h3><ul><li>Worst-case complexity: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{n-1} +1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> function evaluations</li></ul><h3 id="quantum-solution-1" tabindex="-1"><a class="header-anchor" href="#quantum-solution-1"><span>Quantum Solution</span></a></h3><ul><li>Achieves result in one function evaluation</li></ul><h3 id="key-concepts-1" tabindex="-1"><a class="header-anchor" href="#key-concepts-1"><span>Key Concepts</span></a></h3><ul><li>n-qubits superposition using tensor product of Hadamrd gates <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mrow><mo>⊗</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H^{\\otimes n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊗</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></li><li>Inner product over binary numbers</li></ul><h3 id="algorithm-steps-1" tabindex="-1"><a class="header-anchor" href="#algorithm-steps-1"><span>Algorithm steps</span></a></h3><ol><li>prepare initial state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mn>0...0</mn><mo stretchy="false">⟩</mo></mpadded><mpadded><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{0...0}\\ket{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">0...0</span></span><span class="mclose">⟩</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">1</span></span><span class="mclose">⟩</span></span></span></span></span></li><li>Apply <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mrow><mo>⊗</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H^{\\otimes n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊗</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> to the first n qubits and H to the last qubit</li><li>Apply the quantum oracle <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">U_{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li><li>Apply <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mrow><mo>⊗</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H^{\\otimes n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊗</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> to the <strong>first n qubits</strong></li><li>Measure the first n qubits</li></ol><h3 id="outcome-1" tabindex="-1"><a class="header-anchor" href="#outcome-1"><span>Outcome</span></a></h3><ul><li>All 0s: Function is constant</li><li>Any other results: Function is balanced</li></ul><h2 id="_3-simon-s-algorithm" tabindex="-1"><a class="header-anchor" href="#_3-simon-s-algorithm"><span>3. Simon&#39;s Algorithm</span></a></h2><h3 id="problem-statement-1" tabindex="-1"><a class="header-anchor" href="#problem-statement-1"><span>Problem Statement</span></a></h3><ul><li>Given a 2-to-1 functon f such that $f(x) = f(x \\otimes a) $ for some unknown a</li><li>Task: Determine a</li></ul><h3 id="classical-solution-1" tabindex="-1"><a class="header-anchor" href="#classical-solution-1"><span>Classical Solution</span></a></h3><ul><li>Brute force: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>Birthday problem approach: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^{n/2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul><h3 id="quantum-solution-2" tabindex="-1"><a class="header-anchor" href="#quantum-solution-2"><span>Quantum Solution</span></a></h3><ul><li>Achieves <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> complexity, exponentially faster</li></ul><h3 id="key-concepts-2" tabindex="-1"><a class="header-anchor" href="#key-concepts-2"><span>Key Concepts</span></a></h3><ul><li>Quantum parallelism</li><li>Interference</li><li>Linear algebra GF(2)</li></ul><h3 id="algorithm-steps-2" tabindex="-1"><a class="header-anchor" href="#algorithm-steps-2"><span>Algorithm Steps</span></a></h3><ol><li>Prepare initial state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mn>0...0</mn><mo stretchy="false">⟩</mo></mpadded><mpadded><mi mathvariant="normal">∣</mi><mn>0...0</mn><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{0...0} \\ket{0...0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">0...0</span></span><span class="mclose">⟩</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord">0...0</span></span><span class="mclose">⟩</span></span></span></span></span></li><li>Apply <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mrow><mo>⊗</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H^{\\otimes n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊗</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> to the first n qubits</li><li>Apply the quantum oracle <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">U_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li><li>Apply <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mrow><mo>⊗</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H^{\\otimes n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊗</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> to the first qubits</li><li>Measure the fist n qubits</li><li>Repeat steps 1-5 to obtain n-1 linearly independent equations</li><li>Solve the system of equations to find a</li></ol><h3 id="outcome-2" tabindex="-1"><a class="header-anchor" href="#outcome-2"><span>Outcome</span></a></h3><ul><li>Determines the hidden period a with a high probability in <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> quantum operations</li></ul><h1 id="quantum-generative-adversarial-networks-qgan" tabindex="-1"><a class="header-anchor" href="#quantum-generative-adversarial-networks-qgan"><span>Quantum Generative Adversarial Networks (QGAN)</span></a></h1><h2 id="classcial-generative-adversrial-networks" tabindex="-1"><a class="header-anchor" href="#classcial-generative-adversrial-networks"><span>Classcial Generative Adversrial Networks</span></a></h2><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h3><ul><li>An exciting development in Deep Learning research</li><li>Various applications: Image generation, super-resolution, image-to-image translation, 3D object generation, text generatin, synthetic data generation</li></ul><h3 id="key-compnents" tabindex="-1"><a class="header-anchor" href="#key-compnents"><span>Key Compnents</span></a></h3><ol><li><p>Generator (G)</p><ul><li>Creates new sample data from a specific domain (e.g., images, text, audio)</li><li>Aims to produce &quot;fake&quot; data indistinguishable from real data</li></ul></li><li><p>Discriminator (D)</p><ul><li>Distinguishes fake data created by the Generator from real data</li></ul></li></ol><h3 id="training-strategy" tabindex="-1"><a class="header-anchor" href="#training-strategy"><span>Training Strategy</span></a></h3><ul><li>Using game theory</li><li>Analogy: Generator as a counterfeiter, Distriminator as a detective</li><li>Both try to outsmart each other</li></ul><h3 id="mathematical-framework" tabindex="-1"><a class="header-anchor" href="#mathematical-framework"><span>Mathematical Framework</span></a></h3><ul><li>Real-world data distribution: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>R</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_R(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li><li>Generator distribution: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>G</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li><li>Genweator parameters: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>G</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Discriminator parameters: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Objective: Maximize the probability of D misclassifying G&#39;s samples as real</li></ul><h2 id="quantum-generative-adversarial-networks" tabindex="-1"><a class="header-anchor" href="#quantum-generative-adversarial-networks"><span>Quantum Generative Adversarial Networks</span></a></h2><h3 id="motvation" tabindex="-1"><a class="header-anchor" href="#motvation"><span>Motvation</span></a></h3><ul><li>Potential to solve certain hard problems that classical GANs struggle with</li><li>Applications in quantum chemistry calculations and simulations</li></ul><h3 id="key-concepts-3" tabindex="-1"><a class="header-anchor" href="#key-concepts-3"><span>Key Concepts</span></a></h3><ol><li>Quantum Generator (QG) <ul><li>Implemented as a variational quantum circuit</li><li>Parameters: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>G</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Output: Density matrix <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>ρ</mi><mtext>G</mtext><mi>λ</mi></msubsup></mrow><annotation encoding="application/x-tex">\\rho_{\\text{G}}^{\\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">G</span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li><li>Quantum Discriminator (QD) <ul><li>Separate quantum circuit</li><li>Parameter: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>Determines if input state is created by R (real) or G (fake)</li></ul></li><li>Data Source (R) <ul><li>Outputs a density martix <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>ρ</mi><mtext>G</mtext><mi>λ</mi></msubsup></mrow><annotation encoding="application/x-tex">\\rho_{\\text{G}}^{\\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">G</span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span></span></span></span> ciontainning n subsystems</li></ul></li><li>Noise Source(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span><span class="mclose">⟩</span></span></span></span></span>) <ul><li>Provides entropy within the distribution of generatied data</li><li>Acts as a control for the generator</li></ul></li></ol><h3 id="qgan-framework" tabindex="-1"><a class="header-anchor" href="#qgan-framework"><span>QGAN Framework</span></a></h3><ul><li>Conditional GANs: Generate samples from condiional distribution <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x|\\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span></li><li>Labels: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mi>λ</mi><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{\\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">λ</span></span><span class="mclose">⟩</span></span></span></span></span></li><li>Generator output: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>ρ</mi><mtext>G</mtext><mi>λ</mi></msubsup><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>G</mi></msub><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mpadded><mi mathvariant="normal">∣</mi><msub><mi>ψ</mi><mi>z</mi></msub><mo stretchy="false">⟩</mo></mpadded><mpadded><mo stretchy="false">⟨</mo><msub><mi>ψ</mi><mi>z</mi></msub><mi mathvariant="normal">∣</mi></mpadded></mrow><annotation encoding="application/x-tex">\\rho_{\\text{G}}^{\\lambda}(\\theta_G, z) = \\ket{\\psi_z} \\bra{\\psi_z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">G</span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">⟩</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen">⟨</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span> for each <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span><span class="mclose">⟩</span></span></span></span></span></li></ul><h3 id="optimization-objective" tabindex="-1"><a class="header-anchor" href="#optimization-objective"><span>Optimization Objective</span></a></h3><ul><li>Formalized as minmax adversarial game: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>θ</mi><mi>G</mi></msub></munder></mi><mtext> </mtext><mi><munder><mo><mi>max</mi><mo>⁡</mo></mo><msub><mi>θ</mi><mi>D</mi></msub></munder></mi><mtext> </mtext><mi>V</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>D</mi></msub><mo separator="true">,</mo><msub><mi>θ</mi><mi>G</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> \\underset{\\theta_G}{\\min} \\, \\underset{\\theta_D}{\\max} \\, V(\\theta_D, \\theta_G) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6024em;vertical-align:-0.8524em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8524em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8524em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>Cost function is linear in the output probabilities of D</li></ul><h3 id="qgan-circuit" tabindex="-1"><a class="header-anchor" href="#qgan-circuit"><span>QGAN Circuit</span></a></h3><ul><li>6 operationally defined registers</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>≡</mo><mpadded><mi mathvariant="normal">∣</mi><mrow><mi>r</mi><mi>e</mi><mi>a</mi><mi>l</mi></mrow><mo stretchy="false">⟩</mo></mpadded><mpadded><mo stretchy="false">⟨</mo><mrow><mi>r</mi><mi>e</mi><mi>a</mi><mi>l</mi></mrow><mi mathvariant="normal">∣</mi></mpadded><mo>−</mo><mpadded><mi mathvariant="normal">∣</mi><mrow><mi>f</mi><mi>a</mi><mi>k</mi><mi>e</mi></mrow><mo stretchy="false">⟩</mo></mpadded><mpadded><mo stretchy="false">⟨</mo><mrow><mi>f</mi><mi>a</mi><mi>k</mi><mi>e</mi></mrow><mi mathvariant="normal">∣</mi></mpadded></mrow><annotation encoding="application/x-tex">Z \\equiv \\ket{real} \\bra{real} - \\ket{fake}\\bra{fake}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mclose">⟩</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord">∣</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal">e</span></span><span class="mclose">⟩</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal">e</span></span><span class="mord">∣</span></span></span></span></span></li></ul><h3 id="trainning-procedure" tabindex="-1"><a class="header-anchor" href="#trainning-procedure"><span>Trainning Procedure</span></a></h3><ol><li>Initialize <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>G</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> randomly</li><li>For each training iteration : <ul><li>Sample minibatch of n noise samples and m label samples</li><li>Generate m fake dara samples using G</li><li>Update D by ascending its stochastic gradient</li><li>Sample minibatch of m noise samples and m label samples</li><li>Update G by descending its stochastic gradient</li></ul></li></ol><h2 id="key-takeways" tabindex="-1"><a class="header-anchor" href="#key-takeways"><span>Key Takeways</span></a></h2><ol><li>QGANs extend classical GANs to the quantum domain, potentially solving problems classical GANs strugglew with.</li><li>The quantum framework uses density matrices and quantum circuits for both the generator and discriminator.</li><li>The training process involves a minmax game between the quantum generator and discriminator</li><li>QGAN have potential applications in quantum chemistry and quantum simulations.</li><li>The noisee source <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mpadded><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">⟩</mo></mpadded></mrow><annotation encoding="application/x-tex">\\ket{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span><span class="mclose">⟩</span></span></span></span></span> play a crucial role in providing entropy and control for the quantum generator.</li></ol>',65)]))}const r=a(l,[["render",m],["__file","week11.html.vue"]]),c=JSON.parse(`{"path":"/quantum-computing/week11.html","title":"Quantum Algorithms","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1.Deutsch's Algorithm","slug":"_1-deutsch-s-algorithm","link":"#_1-deutsch-s-algorithm","children":[{"level":3,"title":"problem statemet","slug":"problem-statemet","link":"#problem-statemet","children":[]},{"level":3,"title":"Classial Solution","slug":"classial-solution","link":"#classial-solution","children":[]},{"level":3,"title":"Quantum Solution","slug":"quantum-solution","link":"#quantum-solution","children":[]},{"level":3,"title":"Key concepts","slug":"key-concepts","link":"#key-concepts","children":[]},{"level":3,"title":"Algorithm Steps","slug":"algorithm-steps","link":"#algorithm-steps","children":[]},{"level":3,"title":"Outcome","slug":"outcome","link":"#outcome","children":[]}]},{"level":2,"title":"2.Deutsch-Jozsa Algorithm","slug":"_2-deutsch-jozsa-algorithm","link":"#_2-deutsch-jozsa-algorithm","children":[{"level":3,"title":"Problem Statement","slug":"problem-statement","link":"#problem-statement","children":[]},{"level":3,"title":"Classical Solution","slug":"classical-solution","link":"#classical-solution","children":[]},{"level":3,"title":"Quantum Solution","slug":"quantum-solution-1","link":"#quantum-solution-1","children":[]},{"level":3,"title":"Key Concepts","slug":"key-concepts-1","link":"#key-concepts-1","children":[]},{"level":3,"title":"Algorithm steps","slug":"algorithm-steps-1","link":"#algorithm-steps-1","children":[]},{"level":3,"title":"Outcome","slug":"outcome-1","link":"#outcome-1","children":[]}]},{"level":2,"title":"3. Simon's Algorithm","slug":"_3-simon-s-algorithm","link":"#_3-simon-s-algorithm","children":[{"level":3,"title":"Problem Statement","slug":"problem-statement-1","link":"#problem-statement-1","children":[]},{"level":3,"title":"Classical Solution","slug":"classical-solution-1","link":"#classical-solution-1","children":[]},{"level":3,"title":"Quantum Solution","slug":"quantum-solution-2","link":"#quantum-solution-2","children":[]},{"level":3,"title":"Key Concepts","slug":"key-concepts-2","link":"#key-concepts-2","children":[]},{"level":3,"title":"Algorithm Steps","slug":"algorithm-steps-2","link":"#algorithm-steps-2","children":[]},{"level":3,"title":"Outcome","slug":"outcome-2","link":"#outcome-2","children":[]}]},{"level":2,"title":"Classcial Generative Adversrial Networks","slug":"classcial-generative-adversrial-networks","link":"#classcial-generative-adversrial-networks","children":[{"level":3,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":3,"title":"Key Compnents","slug":"key-compnents","link":"#key-compnents","children":[]},{"level":3,"title":"Training Strategy","slug":"training-strategy","link":"#training-strategy","children":[]},{"level":3,"title":"Mathematical Framework","slug":"mathematical-framework","link":"#mathematical-framework","children":[]}]},{"level":2,"title":"Quantum Generative Adversarial Networks","slug":"quantum-generative-adversarial-networks","link":"#quantum-generative-adversarial-networks","children":[{"level":3,"title":"Motvation","slug":"motvation","link":"#motvation","children":[]},{"level":3,"title":"Key Concepts","slug":"key-concepts-3","link":"#key-concepts-3","children":[]},{"level":3,"title":"QGAN Framework","slug":"qgan-framework","link":"#qgan-framework","children":[]},{"level":3,"title":"Optimization Objective","slug":"optimization-objective","link":"#optimization-objective","children":[]},{"level":3,"title":"QGAN Circuit","slug":"qgan-circuit","link":"#qgan-circuit","children":[]},{"level":3,"title":"Trainning Procedure","slug":"trainning-procedure","link":"#trainning-procedure","children":[]}]},{"level":2,"title":"Key Takeways","slug":"key-takeways","link":"#key-takeways","children":[]}],"git":{"updatedTime":1729062403000,"contributors":[{"name":"pingzhihe","email":"pzh1760473545@gmail.com","commits":1,"url":"https://github.com/pingzhihe"}]},"filePathRelative":"quantum-computing/week11.md"}`);export{r as comp,c as data};
